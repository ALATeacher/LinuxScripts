#!/usr/bin/python3

#Script to convert unity game into packet for Game Development
#Usage: unityCredit [UNITY_PROJECT_ZIP] [TERMINOLOGY PDF]
#Example: unityCredit game.zip terms.pdf

import sys, os, zipfile
from fpdf import FPDF
import textwrap
from PyPDF2 import PdfFileMerger

#Thanks StackOverflow
#https://stackoverflow.com/questions/10112244/convert-plain-text-to-pdf-in-python
def text_to_pdf(text, filename):
    text = text.encode('latin-1', 'replace').decode('latin-1')
    a4_width_mm = 210
    pt_to_mm = 0.35
    fontsize_pt = 10
    fontsize_mm = fontsize_pt * pt_to_mm
    margin_bottom_mm = 10
    character_width_mm = 7 * pt_to_mm
    width_text = a4_width_mm / character_width_mm

    pdf = FPDF(orientation='P', unit='mm', format='A4')
    pdf.set_auto_page_break(True, margin=margin_bottom_mm)
    pdf.add_page()
    pdf.set_font(family='Courier', size=fontsize_pt)
    splitted = text.split('\n')

    for line in splitted:
        lines = textwrap.wrap(line, width_text)

        if len(lines) == 0:
            pdf.ln()

        for wrap in lines:
            pdf.cell(0, fontsize_mm, wrap, ln=1)

    pdf.output(filename, 'F')

output = sys.argv[-1]
i = sys.argv[1]
terms = sys.argv[2]
zipFile = i
split_tup = os.path.splitext(i)
file_name = split_tup[0]
file_extension = split_tup[1]
if file_extension!=".zip":
    print("ERROR: File must be a zip file.")
    exit()


with zipfile.ZipFile(i,"r") as zip_ref:
    zip_ref.extractall(os.path.split(zipFile)[0])
    files = zip_ref.namelist()

source = []
pdfs = []
for f in files:
    if os.path.splitext(f)[1]==".cs" and "/Assets/" in f:
        source.append(f)

for f in source:
    text = f+"\n"
    file = open(os.path.split(zipFile)[0]+"/"+f)
    text += file.read()
    file.close
    text_to_pdf(text, os.path.split(zipFile)[0]+"/"+f+".pdf")
    pdfs.append(os.path.split(zipFile)[0]+"/"+f+".pdf")

merger = PdfFileMerger()
merger.append(terms)

for f in pdfs:
    merger.append(f)
merger.write(file_name+".pdf")
merger.close()

